{"version":3,"sources":["assets/rguAccelerator.jpg","assets/attendr-logo-primary.png","views/Sessions/index.js","views/Attendance/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Sessions","useState","sessions","setSessions","useEffect","JSON","parse","localStorage","getItem","data","columns","label","field","rows","map","item","event_id","event_date","room","uniqueName","Badge","variant","name","action","to","id","summary","attendance","items","i","mark_id","reduce","a","v","length","striped","bordered","hover","noBottomColumns","order","Attendance","session","setSession","setAttendance","present","absent","perPresent","perAbsent","absenteeism","setAbsenteeism","useParams","theSession","filter","theAttendance","nbPresent","j","total","studentUniqueName","studentName","mark","markedAt","Date","toLocaleString","Table","CardGroup","Card","Header","Body","animate","animationDuration","animationEasing","title","value","color","dataIndex","percentage","Math","round","labelPosition","labelStyle","fill","fontSize","style","height","Footer","className","entries","App","isSessions","setIsSessions","getData","console","log","fetch","then","response","json","setItem","stringify","catch","error","Container","Row","Col","Image","src","require","width","Button","onClick","path","children","from","Spinner","animation","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dae5210d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rguAccelerator.6e03a1a3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/attendr-logo-primary.51a2cc64.png\";","import React, {Â useState, useEffect } from 'react'\n\nimport { Badge } from 'react-bootstrap'\n\nimport { Link } from 'react-router-dom'\n\nimport { MDBDataTable } from 'mdbreact'\n\nconst Sessions = () => {\n    const [sessions, setSessions] = useState(null)\n    \n    useEffect(() => {\n        setSessions(JSON.parse(localStorage.getItem(\"sessions\")))\n    }, [])\n\n    const data = {\n        columns: [\n            {\n                label: 'ID',\n                field: 'event_id'\n            },\n            {\n                label: 'Date',\n                field: 'event_date'\n            },\n            {\n                label: 'Room',\n                field: 'room'\n            },\n            {\n                label: 'Module',\n                field: 'module'\n            },\n            {\n                label: 'Action',\n                field: 'action'\n            },\n            {\n                label: 'Summary',\n                field: 'summary'\n            }\n\n        ],\n        rows: sessions != null ? (\n            sessions.map(item => {\n                return {\n                    event_id: item.event_id, \n                    event_date: item.event_date, \n                    room: item.room.uniqueName, \n                    module: <span><Badge variant=\"primary\">{item.module.uniqueName}</Badge> / {item.module.name}</span>,\n                    action: <Link to={\"/attendance/\" + item.id}>View Attendance</Link>,\n                    summary: <span>{item.attendance.items.map(i => i.mark_id).reduce((a, v) => a + v)} / {(item.attendance.items).length}</span>\n                }\n            })\n        ) : []\n    }\n    \n    return (\n        <div>\n            <h1>Sessions</h1>\n            {\n                sessions != null ? (\n                    <MDBDataTable\n                        striped\n                        bordered\n                        hover\n                        data={data}\n                        noBottomColumns\n                        order={['event_date', 'asc']}\n                    />\n                ) : null\n            }\n            \n        </div>\n    )\n}\n\n\nexport default Sessions","import React, { useState, useEffect } from 'react'\n\nimport { \n    Table, \n    Badge,\n    Card,\n    CardGroup\n} from 'react-bootstrap'\n\nimport { \n    useParams, \n    Link \n} from 'react-router-dom'\n\nimport { MDBDataTable } from 'mdbreact'\n\nimport PieChart from 'react-minimal-pie-chart'\n\nconst Attendance = () => {\n    const [session, setSession] = useState(null)\n    const [attendance, setAttendance] = useState(null)\n    const [absenteeism, setAbsenteeism] = useState({ present: 0, absent: 0, perPresent: 0, perAbsent: 0 })\n    const { id } = useParams()\n\n    useEffect(() => {\n        let sessions = JSON.parse(localStorage.getItem(\"sessions\"))\n\n        let theSession = sessions.filter(item => item.id === id)[0]\n        setSession(theSession)\n        let theAttendance = theSession.attendance.items\n        setAttendance(theAttendance)\n\n        let nbPresent = theAttendance.map(item => item.mark_id).reduce((i, j) => i + j)\n        let total = theAttendance.length\n        let nbAbsent = total - nbPresent\n        setAbsenteeism({ present: nbPresent, absent: nbAbsent })\n\n    }, [id])\n\n    const data = {\n        columns: [\n            {\n                label: 'Student ID',\n                field: 'studentUniqueName',\n            },\n            {\n                label: 'Student name',\n                field: 'studentName'\n            },\n            {\n                label: 'Mark',\n                field: 'mark',\n            },\n            {\n                label: 'Marked at',\n                field: 'markedAt',\n            }\n        ],\n        rows: attendance != null ? (\n            attendance.map(item => {\n                return {\n                    studentUniqueName: item.studentUniqueName,\n                    studentName: item.studentName,\n                    mark: item.mark_id === 0 ? <Badge variant=\"danger\">{item.mark}</Badge> : <Badge variant=\"success\">{item.mark}</Badge>,\n                    markedAt: item.mark_id === 0 ? null : new Date(item.markedAt).toLocaleString()\n                }\n            })\n        ) : []\n    }\n\n    return (\n        <div>\n            <Link to={\"/sessions/\"}>Go back</Link>\n            <h1>Attendance</h1>\n            <Table striped bordered hover>\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Date</th>\n                        <th>Room</th>\n                        <th>Module</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        session != null ? (\n                            <tr>\n                                <td>{session.event_id}</td>\n                                <td>{session.event_date}</td>\n                                <td>{session.room.uniqueName}</td>\n                                <td><Badge variant=\"primary\">{session.module.uniqueName}</Badge> / {session.module.name}</td>\n                            </tr>\n                        ) : null\n                    }\n                </tbody>\n            </Table>\n            \n            <CardGroup>\n                <Card>\n                    <Card.Header>\n                        Absenteeism rate\n                    </Card.Header>\n                    <Card.Body>\n                        <PieChart\n                            animate={true}\n                            animationDuration={500}\n                            animationEasing=\"ease-out\"\n                            data={[\n                                {\n                                    title: \"present\",\n                                    value: absenteeism.present,\n                                    color: 'green'\n                                },\n                                {\n                                    title: \"absent\",\n                                    value: absenteeism.absent,\n                                    color: 'red'\n                                }\n                            ]}\n                            label={({data, dataIndex}) => {\n                                if(data[dataIndex].title === \"present\") {\n                                    if(data[dataIndex].percentage > 0)\n                                        return Math.round(data[dataIndex].percentage) + \"%\"\n                                } else {\n                                    if(data[dataIndex].percentage > 0)\n                                        return Math.round(data[dataIndex].percentage) + \"%\"\n                                }\n                            }}\n                            labelPosition={50}\n                            labelStyle={{\n                                fill: \"white\",\n                                fontSize: \"10px\"\n                            }}\n                            style={{\n                                height: \"200px\"\n                            }}\n                        />\n                    </Card.Body>\n                    <Card.Footer className=\"d-flex justify-content-around\">\n                        <Badge style={{fontSize: \"20px\"}} variant=\"success\">{absenteeism.present} present</Badge>\n                        <Badge style={{fontSize: \"20px\"}} variant=\"danger\">{absenteeism.absent} absent</Badge>\n                        <Badge style={{fontSize: \"20px\"}} variant=\"primary\">{absenteeism.absent + absenteeism.present} total</Badge>\n                    </Card.Footer>\n                </Card>\n            </CardGroup>\n        \n            {\n                attendance != null ? (\n                <MDBDataTable\n                    striped\n                    bordered\n                    hover\n                    data={data}\n                    noBottomColumns\n                    entries={100}\n                    order={['studentName', 'asc']}\n                />\n                ) : null\n            }\n            \n        </div>\n    )\n}\n\nexport default Attendance","import React, { useState, useEffect } from 'react'\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect\n} from \"react-router-dom\"\n\nimport {\n    Container,\n    Row,\n    Col,\n    Image,\n    Button,\n    Spinner\n} from 'react-bootstrap'\n\nimport Sessions from './views/Sessions'\nimport Attendance from './views/Attendance'\n\nconst App = () => {\n    const [isSessions, setIsSessions] = useState(false)\n\n    useEffect(() => {\n        if(localStorage.getItem(\"sessions\") == null) {\n            getData()\n        } else {\n            setIsSessions(true)\n        }\n    }, [])\n\n    const getData = () => {\n        console.log(\"getData\")\n        const url = 'https://xhg56111bk.execute-api.eu-west-2.amazonaws.com/prod/attendance/accelerator'\n        fetch(url)\n            .then(response => response.json())\n            .then(data => {\n                let sessions = data.items\n                sessions = sessions.map(item => {\n                    return {...item, module: JSON.parse(item.module), room: JSON.parse(item.room)}\n                })\n                localStorage.setItem(\"sessions\", JSON.stringify(sessions))\n                setIsSessions(false)\n                setIsSessions(true)\n            })\n            .catch(error => console.log(error))\n    }\n\n    return (\n        <Container>\n            <Row className=\"align-items-center\">\n                <Col><Image src={require('./assets/rguAccelerator.jpg')} width=\"150\" /></Col>\n                <Col><Image src={require('./assets/attendr-logo-primary.png')} width=\"150\" /></Col>\n            </Row>\n            <Row className=\"justify-content-end\">\n                <Button onClick={() => getData()}>Refresh</Button>\n            </Row>\n            {\n                isSessions ? (\n                    <Router>\n                        <Switch>\n                            <Route path=\"/sessions\" children={<Sessions />}/>\n                            <Route path=\"/attendance/:id\" children={<Attendance />}/>\n                            <Redirect from=\"/\" to=\"/sessions\" />\n                        </Switch>\n                    </Router>\n                ) : <Spinner animation=\"border\" />\n            }\n            \n        </Container>\n        \n    )\n    \n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}